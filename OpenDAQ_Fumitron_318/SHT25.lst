GAS LISTING /tmp/ccTYkIoD.s 			page 1


   1               		.file	"SHT25.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.stabs	"/home/rusty/Emissions/microcontroller/OpenDAQ_Fumitron_318/",100,0,2,.Ltext0
   9               		.stabs	"SHT25.c",100,0,2,.Ltext0
  10               		.text
  11               	.Ltext0:
  12               		.stabs	"gcc2_compiled.",60,0,0,0
  13               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  14               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  15               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  16               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  17               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  18               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  19               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  21               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  22               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  23               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  24               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  28               		.stabs	"SHT25.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.5.3/include/stdint.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h",130,0,0,0
  31               		.stabs	"int8_t:t(3,1)=(0,10)",128,0,121,0
  32               		.stabs	"uint8_t:t(3,2)=(0,11)",128,0,122,0
  33               		.stabs	"int16_t:t(3,3)=(0,1)",128,0,123,0
  34               		.stabs	"uint16_t:t(3,4)=(0,4)",128,0,124,0
  35               		.stabs	"int32_t:t(3,5)=(0,3)",128,0,125,0
  36               		.stabs	"uint32_t:t(3,6)=(0,5)",128,0,126,0
  37               		.stabs	"int64_t:t(3,7)=(0,6)",128,0,128,0
  38               		.stabs	"uint64_t:t(3,8)=(0,7)",128,0,129,0
  39               		.stabs	"intptr_t:t(3,9)=(3,3)",128,0,142,0
  40               		.stabs	"uintptr_t:t(3,10)=(3,4)",128,0,147,0
  41               		.stabs	"int_least8_t:t(3,11)=(3,1)",128,0,159,0
  42               		.stabs	"uint_least8_t:t(3,12)=(3,2)",128,0,164,0
  43               		.stabs	"int_least16_t:t(3,13)=(3,3)",128,0,169,0
  44               		.stabs	"uint_least16_t:t(3,14)=(3,4)",128,0,174,0
  45               		.stabs	"int_least32_t:t(3,15)=(3,5)",128,0,179,0
  46               		.stabs	"uint_least32_t:t(3,16)=(3,6)",128,0,184,0
  47               		.stabs	"int_least64_t:t(3,17)=(3,7)",128,0,192,0
  48               		.stabs	"uint_least64_t:t(3,18)=(3,8)",128,0,199,0
  49               		.stabs	"int_fast8_t:t(3,19)=(3,1)",128,0,213,0
  50               		.stabs	"uint_fast8_t:t(3,20)=(3,2)",128,0,218,0
  51               		.stabs	"int_fast16_t:t(3,21)=(3,3)",128,0,223,0
  52               		.stabs	"uint_fast16_t:t(3,22)=(3,4)",128,0,228,0
  53               		.stabs	"int_fast32_t:t(3,23)=(3,5)",128,0,233,0
  54               		.stabs	"uint_fast32_t:t(3,24)=(3,6)",128,0,238,0
  55               		.stabs	"int_fast64_t:t(3,25)=(3,7)",128,0,246,0
  56               		.stabs	"uint_fast64_t:t(3,26)=(3,8)",128,0,253,0
  57               		.stabs	"intmax_t:t(3,27)=(3,7)",128,0,273,0
GAS LISTING /tmp/ccTYkIoD.s 			page 2


  58               		.stabs	"uintmax_t:t(3,28)=(3,8)",128,0,278,0
  59               		.stabn	162,0,0,0
  60               		.stabn	162,0,0,0
  61               		.stabs	"i2cmaster.h",130,0,0,0
  62               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h",130,0,0,0
  63               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  64               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/inttypes.h",130,0,0,0
  65               		.stabs	"int_farptr_t:t(7,1)=(3,5)",128,0,77,0
  66               		.stabs	"uint_farptr_t:t(7,2)=(3,6)",128,0,81,0
  67               		.stabn	162,0,0,0
  68               		.stabn	162,0,0,0
  69               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/fuse.h",130,0,0,0
  70               		.stabs	"__fuse_t:t(8,1)=(8,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,252,0
  71               		.stabn	162,0,0,0
  72               		.stabn	162,0,0,0
  73               		.stabn	162,0,0,0
  74               		.stabs	"hum_dat:T(1,1)=s4SHT_temp:(3,4),0,16;SHT_rh:(3,4),16,16;;",128,0,0,0
  75               		.stabn	162,0,0,0
  76               		.stabs	"uart.h",130,0,0,0
  77               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/pgmspace.h",130,0,0,0
  78               		.stabs	"/usr/lib/gcc/avr/4.5.3/include/stddef.h",130,0,0,0
  79               		.stabs	"size_t:t(11,1)=(0,4)",128,0,211,0
  80               		.stabn	162,0,0,0
  81               		.stabs	"prog_void:t(10,1)=(10,2)=(10,2)",128,0,217,0
  82               		.stabs	"prog_char:t(10,3)=(10,4)=@s8;r(10,4);0;255;",128,0,218,0
  83               		.stabs	"prog_uchar:t(10,5)=(10,6)=@s8;r(10,6);0;255;",128,0,219,0
  84               		.stabs	"prog_int8_t:t(10,7)=(10,8)=(0,10)",128,0,221,0
  85               		.stabs	"prog_uint8_t:t(10,9)=(10,10)=(0,11)",128,0,222,0
  86               		.stabs	"prog_int16_t:t(10,11)=(10,12)=(0,1)",128,0,223,0
  87               		.stabs	"prog_uint16_t:t(10,13)=(10,14)=(0,4)",128,0,224,0
  88               		.stabs	"prog_int32_t:t(10,15)=(10,16)=(0,3)",128,0,225,0
  89               		.stabs	"prog_uint32_t:t(10,17)=(10,18)=(0,5)",128,0,226,0
  90               		.stabs	"prog_int64_t:t(10,19)=(10,20)=(0,6)",128,0,228,0
  91               		.stabs	"prog_uint64_t:t(10,21)=(10,22)=(0,7)",128,0,229,0
  92               		.stabn	162,0,0,0
  93               		.stabn	162,0,0,0
  94               		.stabs	"ReadSHT25:F(1,1)",36,0,26,ReadSHT25
  95               	.global	ReadSHT25
  96               		.type	ReadSHT25, @function
  97               	ReadSHT25:
  98               		.stabd	46,0,0
   1:SHT25.c       **** ///
   2:SHT25.c       **** /// \file SHT25.c
   3:SHT25.c       **** /// \brief Communication with Senserion SHT25 RH sensor 
   4:SHT25.c       **** /// \details I2c commands to read SHT25 sensor 
   5:SHT25.c       **** /// \author Karl Walter.  karl (at) waltech.com
   6:SHT25.c       **** /// \copyright Copyright (c) 2014 Karl Walter.  karl (at) waltech.com.
   7:SHT25.c       **** ///This software is distributed under the MIT License. 
   8:SHT25.c       **** ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software an
   9:SHT25.c       **** ///associated documentation files (the "Software"), to deal in the Software without restriction, 
  10:SHT25.c       **** ///including without limitation the rights to use, copy, modify, merge, publish, distribute, sublic
  11:SHT25.c       **** ///and/or sell copies of the Software, and to permit persons to whom the Software is furnished to d
  12:SHT25.c       **** ///subject to the following conditions:
  13:SHT25.c       **** ///
  14:SHT25.c       **** ///\copyright The above copyright notice and this permission notice shall be included in all copies
  15:SHT25.c       **** ///portions of the Software.
  16:SHT25.c       **** ///The software is provided "as is", without warranty of any kind expressed or implied, 
GAS LISTING /tmp/ccTYkIoD.s 			page 3


  17:SHT25.c       **** ///including but not limited to the warranties of merchantability, fitness for a particular 
  18:SHT25.c       **** ///purpose and noninfringement.  In no event shall the authors or copyright holders be liable 
  19:SHT25.c       **** ///for any claim, damages or other liability whether in an action of contract, tort or 
  20:SHT25.c       **** ///otherwise, arising from, out of or in connection with the software or the use or other 
  21:SHT25.c       **** ///dealings in the software.
  22:SHT25.c       **** ///
  23:SHT25.c       **** #include "SHT25.h"
  24:SHT25.c       **** #include <util/delay.h>
  25:SHT25.c       **** #include "uart.h"        
  26:SHT25.c       **** struct hum_dat ReadSHT25(void)
  27:SHT25.c       **** {
  99               		.stabn	68,0,27,.LM0-.LFBB1
 100               	.LM0:
 101               	.LFBB1:
 102 0000 EF92      		push r14
 103 0002 FF92      		push r15
 104 0004 0F93      		push r16
 105 0006 1F93      		push r17
 106               	/* prologue: function */
 107               	/* frame size = 0 */
 108               	/* stack size = 4 */
 109               	.L__stack_usage = 4
  28:SHT25.c       **** 	struct hum_dat data;
  29:SHT25.c       **** 
  30:SHT25.c       **** 		i2c_start_wait(0x80+I2C_WRITE);     // set device address and write mode
 110               		.stabn	68,0,30,.LM1-.LFBB1
 111               	.LM1:
 112 0008 80E8      		ldi r24,lo8(-128)
 113 000a 0E94 0000 		call i2c_start_wait
  31:SHT25.c       **** 		i2c_write(0xE5);	//get rh
 114               		.stabn	68,0,31,.LM2-.LFBB1
 115               	.LM2:
 116 000e 85EE      		ldi r24,lo8(-27)
 117 0010 0E94 0000 		call i2c_write
 118               	.LBB6:
 119               	.LBB7:
 120               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h",132,0,0,.Ltext1
 121               	.Ltext1:
   1:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
GAS LISTING /tmp/ccTYkIoD.s 			page 4


  20:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2189 2010-10-13 09:39:34Z aboyapati $ */
  34:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
GAS LISTING /tmp/ccTYkIoD.s 			page 5


  77:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /**
  99:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    \ingroup util_delay
 100:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 101:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 102:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 103:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 104:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 105:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 106:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 107:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 108:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 109:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 110:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 111:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 112:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 113:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 115:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 116:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 117:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 118:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 119:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 120:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 121:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 122:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 123:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 124:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 125:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 126:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 127:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 128:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay
 129:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    although this will be deprecated in future.
 130:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 131:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****  */
 132:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** void
 133:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
GAS LISTING /tmp/ccTYkIoD.s 			page 6


 134:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** {
 135:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 136:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	double __tmp ; 
 137:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && !defined(__DELAY_BACKWARD_COMPATIBLE__)
 138:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 139:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 140:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 141:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 142:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 143:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 144:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 145:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 146:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 147:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 148:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#else
 149:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		//round up by default
 150:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 151:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#endif
 152:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 153:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 122               		.stabn	68,0,153,.LM3-.LFBB1
 123               	.LM3:
 124 0014 81E5      		 ldi r24,lo8(-18351)
 125 0016 98EB      	    ldi r25,hi8(-18351)
 126 0018 0197      	    1:sbiw r24,1
 127 001a 01F4      	    brne 1b
 128 001c 00C0      		rjmp .
 129 001e 0000      		nop
 130               	.LBE7:
 131               	.LBE6:
 132               		.stabs	"SHT25.c",132,0,0,.Ltext2
 133               	.Ltext2:
  32:SHT25.c       **** 		_delay_ms(45);//delay for getting RH 12 bit
  33:SHT25.c       **** 		i2c_start_wait(0x80+I2C_READ);   // set device address and read mode
 134               		.stabn	68,0,33,.LM4-.LFBB1
 135               	.LM4:
 136 0020 81E8      		ldi r24,lo8(-127)
 137 0022 0E94 0000 		call i2c_start_wait
  34:SHT25.c       **** 		uint8_t ret1 = i2c_readAck();// data MSB
 138               		.stabn	68,0,34,.LM5-.LFBB1
 139               	.LM5:
 140 0026 0E94 0000 		call i2c_readAck
 141 002a 082F      		mov r16,r24
  35:SHT25.c       **** 		uint8_t ret2 = i2c_readAck();// data LSB
 142               		.stabn	68,0,35,.LM6-.LFBB1
 143               	.LM6:
 144 002c 0E94 0000 		call i2c_readAck
 145 0030 182F      		mov r17,r24
  36:SHT25.c       **** 		uint8_t ret3 = i2c_readNak();// checksum
 146               		.stabn	68,0,36,.LM7-.LFBB1
 147               	.LM7:
 148 0032 0E94 0000 		call i2c_readNak
  37:SHT25.c       **** 		data.SHT_rh = ((ret1<<8) +ret2);
  38:SHT25.c       **** 		i2c_stop(); // 
 149               		.stabn	68,0,38,.LM8-.LFBB1
 150               	.LM8:
 151 0036 0E94 0000 		call i2c_stop
GAS LISTING /tmp/ccTYkIoD.s 			page 7


  39:SHT25.c       **** 		
  40:SHT25.c       **** 	
  41:SHT25.c       **** 		ret1=ret2=ret3=0;
  42:SHT25.c       **** 		i2c_start_wait(0x80+I2C_WRITE);     // set device address and write mode			
 152               		.stabn	68,0,42,.LM9-.LFBB1
 153               	.LM9:
 154 003a 80E8      		ldi r24,lo8(-128)
 155 003c 0E94 0000 		call i2c_start_wait
  43:SHT25.c       **** 		i2c_write(0xE3);	// get temperature
 156               		.stabn	68,0,43,.LM10-.LFBB1
 157               	.LM10:
 158 0040 83EE      		ldi r24,lo8(-29)
 159 0042 0E94 0000 		call i2c_write
 160               	.LBB8:
 161               	.LBB9:
 162               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h",132,0,0,.Ltext3
 163               	.Ltext3:
 164               		.stabn	68,0,153,.LM11-.LFBB1
 165               	.LM11:
 166 0046 8BE4      		 ldi r24,lo8(79691)
 167 0048 97E3      	    ldi r25,hi8(79691)
 168 004a A1E0      	    ldi r26,hlo8(79691)
 169 004c 8150      	    1:subi r24,1
 170 004e 9040      	    sbci r25,0
 171 0050 A040      	    sbci r26,0
 172 0052 01F4      	    brne 1b
 173 0054 00C0      		rjmp .
 174               	.LBE9:
 175               	.LBE8:
 176               		.stabs	"SHT25.c",132,0,0,.Ltext4
 177               	.Ltext4:
  44:SHT25.c       **** 		_delay_ms(95);//delay for getting T 14 bit
  45:SHT25.c       **** 		i2c_start_wait(0x80+I2C_READ);   // set device address and read mode
 178               		.stabn	68,0,45,.LM12-.LFBB1
 179               	.LM12:
 180 0056 81E8      		ldi r24,lo8(-127)
 181 0058 0E94 0000 		call i2c_start_wait
  46:SHT25.c       **** 		 ret1 = i2c_readAck();// data MSB
 182               		.stabn	68,0,46,.LM13-.LFBB1
 183               	.LM13:
 184 005c 0E94 0000 		call i2c_readAck
 185 0060 E82E      		mov r14,r24
  47:SHT25.c       **** 		 ret2 = i2c_readAck();// data LSB
 186               		.stabn	68,0,47,.LM14-.LFBB1
 187               	.LM14:
 188 0062 0E94 0000 		call i2c_readAck
 189 0066 F82E      		mov r15,r24
  48:SHT25.c       **** 		 ret3 = i2c_readNak();// checksum
 190               		.stabn	68,0,48,.LM15-.LFBB1
 191               	.LM15:
 192 0068 0E94 0000 		call i2c_readNak
  49:SHT25.c       **** 		data.SHT_temp = ((ret1<<8) +ret2);
  50:SHT25.c       **** 		i2c_stop(); //
 193               		.stabn	68,0,50,.LM16-.LFBB1
 194               	.LM16:
 195 006c 0E94 0000 		call i2c_stop
  49:SHT25.c       **** 		data.SHT_temp = ((ret1<<8) +ret2);
GAS LISTING /tmp/ccTYkIoD.s 			page 8


 196               		.stabn	68,0,49,.LM17-.LFBB1
 197               	.LM17:
 198 0070 5E2D      		mov r21,r14
 199 0072 40E0      		ldi r20,lo8(0)
 200 0074 4F0D      		add r20,r15
 201 0076 511D      		adc r21,__zero_reg__
  37:SHT25.c       **** 		data.SHT_rh = ((ret1<<8) +ret2);
 202               		.stabn	68,0,37,.LM18-.LFBB1
 203               	.LM18:
 204 0078 302F      		mov r19,r16
 205 007a 20E0      		ldi r18,lo8(0)
 206 007c 210F      		add r18,r17
 207 007e 311D      		adc r19,__zero_reg__
  51:SHT25.c       **** 
  52:SHT25.c       **** 
  53:SHT25.c       **** 		return data;
  54:SHT25.c       **** 		 
  55:SHT25.c       **** }
 208               		.stabn	68,0,55,.LM19-.LFBB1
 209               	.LM19:
 210 0080 BA01      		movw r22,r20
 211 0082 C901      		movw r24,r18
 212               	/* epilogue start */
 213 0084 1F91      		pop r17
 214 0086 0F91      		pop r16
 215 0088 FF90      		pop r15
 216 008a EF90      		pop r14
 217 008c 0895      		ret
 218               		.size	ReadSHT25, .-ReadSHT25
 219               	.Lscope1:
 220               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 221               		.stabd	78,0,0
 222               		.stabs	"",100,0,0,.Letext0
 223               	.Letext0:
GAS LISTING /tmp/ccTYkIoD.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SHT25.c
     /tmp/ccTYkIoD.s:2      *ABS*:000000000000003f __SREG__
     /tmp/ccTYkIoD.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/ccTYkIoD.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/ccTYkIoD.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/ccTYkIoD.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccTYkIoD.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccTYkIoD.s:97     .text:0000000000000000 ReadSHT25

UNDEFINED SYMBOLS
i2c_start_wait
i2c_write
i2c_readAck
i2c_readNak
i2c_stop
